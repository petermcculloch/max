allpassinterp(asig, delTime) { 
// asig is ALREADY delayed by an integer amount (@interp step), 
// but delTime should _NOT_ be truncated.   
History prevIn(0);
History prevOut(0);

frac = delTime % 1.; // Wrap delaytime to find fractional portion 
h = frac - 0.5; // 

// Calculate coefficient using Horner's rule.
// This coefficient is used to prevent oscillation near Nyquist
x = 0.3333333333333 + h*((-0.888888888888889+h)*((0.592592592592593+h)*(-0.395061728395062+h*0.263374485596708)));
// These coefficients are from Datorro's "Effect Design Part 2" paper.
// coeff = 1/3 + (h)*(((-8/9)+h)*(((16/27.)+h)*((-32/81.)+h*(64/243.))));
    sigma = (x*asig)+prevIn+(x*prevOut);
    prevOut = sigma;
    prevIn = asig;
// What assertion is failing?
    return sigma;
}